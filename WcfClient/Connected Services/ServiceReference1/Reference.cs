//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFilePiece", ReplyAction="http://tempuri.org/IService1/GetFilePieceResponse")]
        string GetFilePiece(string fileName, int offset, int size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFilePiece", ReplyAction="http://tempuri.org/IService1/GetFilePieceResponse")]
        System.Threading.Tasks.Task<string> GetFilePieceAsync(string fileName, int offset, int size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReceiveText", ReplyAction="http://tempuri.org/IService1/ReceiveTextResponse")]
        void ReceiveText(string fileName, string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReceiveText", ReplyAction="http://tempuri.org/IService1/ReceiveTextResponse")]
        System.Threading.Tasks.Task ReceiveTextAsync(string fileName, string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHashCode", ReplyAction="http://tempuri.org/IService1/GetHashCodeResponse")]
        int GetHashCode(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHashCode", ReplyAction="http://tempuri.org/IService1/GetHashCodeResponse")]
        System.Threading.Tasks.Task<int> GetHashCodeAsync(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBase64Code", ReplyAction="http://tempuri.org/IService1/GetBase64CodeResponse")]
        string GetBase64Code(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBase64Code", ReplyAction="http://tempuri.org/IService1/GetBase64CodeResponse")]
        System.Threading.Tasks.Task<string> GetBase64CodeAsync(System.IO.Stream data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WcfClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WcfClient.ServiceReference1.IService1>, WcfClient.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetFilePiece(string fileName, int offset, int size) {
            return base.Channel.GetFilePiece(fileName, offset, size);
        }
        
        public System.Threading.Tasks.Task<string> GetFilePieceAsync(string fileName, int offset, int size) {
            return base.Channel.GetFilePieceAsync(fileName, offset, size);
        }
        
        public void ReceiveText(string fileName, string text) {
            base.Channel.ReceiveText(fileName, text);
        }
        
        public System.Threading.Tasks.Task ReceiveTextAsync(string fileName, string text) {
            return base.Channel.ReceiveTextAsync(fileName, text);
        }
        
        public int GetHashCode(string text) {
            return base.Channel.GetHashCode(text);
        }
        
        public System.Threading.Tasks.Task<int> GetHashCodeAsync(string text) {
            return base.Channel.GetHashCodeAsync(text);
        }
        
        public string GetBase64Code(System.IO.Stream data) {
            return base.Channel.GetBase64Code(data);
        }
        
        public System.Threading.Tasks.Task<string> GetBase64CodeAsync(System.IO.Stream data) {
            return base.Channel.GetBase64CodeAsync(data);
        }
    }
}
